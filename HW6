HW6-1

Test:

Feature: Amazon Window Handling Case


  Scenario: User can open and close Amazon Applications
    Given Open Amazon T&C page
    When Store original windows
    And Click on Amazon applications link
    And Switch to the newly opened window
    Then Verify Amazon app page is opened
    And User can close new window and switch back to original


Steps:

AMAZON_APPLICATION = (By.CSS_SELECTOR, 'a[href="https://www.amazon.com/gp/feature.html?docId=1000625601"]')


@given('Open Amazon T&C page')
def verify_amazon_TandC_page(context):
    context.driver.get(f'https://www.amazon.com/gp/help/customer/display.html/ref=ap_register_notification_condition_of_use?ie=UTF8&nodeId=508088')


@when('Store original windows')
def store_windows(context):
    context.original_window = context.driver.current_window_handle
    print(context.original_window)


@when('Click on Amazon applications link')
def click_link(context):
    context.driver.find_element(*AMAZON_APPLICATION).click()


@when('Switch to the newly opened window')
def switch_to_new_window(context):
    context.driver.wait = WebDriverWait(context.driver, 5)
    context.driver.wait.until(EC.new_window_is_opened)
    print(context.driver.window_handles)
    context.driver.switch_to.window(context.driver.window_handles[1])


@then('Verify Amazon app page is opened')
def verify_amazon_app_open(context):
    actual_text = context.driver.find_element(By.CSS_SELECTOR, "#mgt-email-sms-download-header").text
    expected_text = 'Download the app today!'
    assert expected_text == actual_text, f'expected {expected_text}, but got {actual_text}'


@then('User can close new window and switch back to original')
def close_new_switch_to_old_window(context):
    context.driver.close()
    context.driver.switch_to_window(context.original_window)


**********************

HW6-2

Test:
Feature: Amazon Best Sellers Links Test

  Scenario: User sees Amazon Best Sellers Links icon
    Given Open amazon Best Sellers top icon page
    Then Verify Best Sellers 5 links are visible

Steps:

BEST_SELLERS_LINKS = (By.CSS_SELECTOR, 'zg_tabs a')
HEADER = (By.CSS_SELECTOR, '#zg_banner_text_wrapper')

@given('Open amazon Best Sellers top icon page')
def open_bestsellers_top_icon(context):
    context.driver.get('https://www.amazon.com/gp/bestsellers/?ref_=nav_cs_bestsellers')


@then('Verify Best Sellers 5 links are visible')
def verify_BestSellers_links_present(context):
    best_sellers_links = context.driver.find_elements(*BEST_SELLERS_LINKS)


    for x in range(len(best_sellers_links)):
        link = context.driver.find_elements(*BEST_SELLERS_LINKS)[x]

        link_text = link.text
        link.click()

        header_text = context.driver.find_element(*HEADER).text
        assert link_text in header_text, f'Expected {link_text} not in {header_text}'